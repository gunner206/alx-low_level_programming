!<arch>
0-isupper.c/    0           0     0     644     225       `
#include "main.h"

/**
 * _isupper - checks for upper case character
 * Return: 1 if uppercase 0 otherwise
 * @c: parameter to be checked
 */
int _isupper(int c)
{
	if (c >= 65 && c <= 90)
		return (1);
	else
		return (0);
}

0-memset.c/     0           0     0     644     280       `
#include "main.h"

/**
 * *_memset -  fills memory with a constant byte.
 * @s: memorie
 * @b: constant bytes
 * @n: nuber of bytes
 * Return: memorie
 */
char *_memset(char *s, char b, unsigned int n)
{
	int i;

	for (i = 0 ; n > 0 ; i++)
	{
		s[i] = b;
		n--;
	}
	return (s);
}
0-strcat.c/     0           0     0     644     438       `
#include "main.h"

/**
 * *_strcat - a fonction that concatenates two strings
 * @dest: the streng appended to
 * @src: the strint that will append to dest
 * Return: dest
 */
char *_strcat(char *dest, char *src)
{
	int destlen = 0;
	int srclen = 0;
	int i;

	for (i = 0 ; dest[i] != '\0' ; i++)
		destlen++;
	for (i = 0 ; src[i] != '\0'; i++)
		srclen++;
	for (i = 0 ; i <= srclen ; i++)
		dest[destlen + i] = src[i];
	return (dest);

}
100-atoi.c/     0           0     0     644     41        `
#include "main.h"

int _atoi(char *s)
{}

1-isdigit.c/    0           0     0     644     216       `
#include "main.h"

/**
 * _isdigit - checks for a digit
 * Return: 1 if it s a digit 0 othetwise
 * @c : parameter to be checked
 */
int _isdigit(int c)
{
	if (c >= 48 && c <= 57)
		return (1);
	else
		return (0);
}
1-memcpy.c/     0           0     0     644     286       `
#include "main.h"

/**
 * *_memcpy - copies memory area
 * @dest: memory area
 * @src: memory area
 * @n: bytes
 * Return: dest
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
	int i = n;
	int j;

	for (j = 0 ; j < i ; j++)
	{
		dest[j] = src[j];
		n--;
	}
	return (dest);
}
1-strncat.c/    0           0     0     644     618       `
#include "main.h"

/**
 * *_strncat - function that concatenates two strings
 * @dest: s1
 * @src: s2
 * @n: bytes
 * Return: dest
 */
char *_strncat(char *dest, char *src, int n)
/*
 * {
 *	int srclen = 0;
 *	int destlen = 0;
 *	int i;
 *
 *	for (i = 0 ; dest[i] != '\0' ; i++)
 *		destlen++;
 *	for (i = 0 ; src[i] != '\0' ; j++)
 *		srclen++;
 *	for (i = 0; i < n ; i++)
 *		dest[destlen + i] = src[i];
 *	return (dest);
 *
 * }
 */
{
	int i;
	int j;

	i = 0;
	while (dest[i] != '\0')
	{
		i++;
	}
	j = 0;
	while (j < n && src[j] != '\0')
	{
		dest[i] = src[j];
		i++;
		j++;
	}
	dest[i] = '\0';
	return (dest);
}

2-strchr.c/     0           0     0     644     265       `
#include "main.h"

/**
 * *_strchr - function that locates a character in a string
 * @s: string
 * @c : character
 * Return: 0
 */
char *_strchr(char *s, char c)
{
	int i;

	for (i = 0 ; s[i] >= '\0' ; i++)
	{
		if (s[i] == c)
			return (&s[i]);
	}
	return (0);
}

2-strlen.c/     0           0     0     644     43        `
#include "main.h"

int _strlen(char *s)
{}

2-strncpy.c/    0           0     0     644     67        `
#include "main.h"

char *_strncpy(char *dest, char *src, int n)
{}

3-islower.c/    0           0     0     644     42        `
#include "main.h"

int _islower(int c)
{}
3-puts.c/       0           0     0     644     203       `
#include "main.h"

/**
 * _puts - a function the prints a string
 * @str: string to print
 *
 * Return: non
 */
void _puts(char *str)
{
	while (*str != '\0')
	{
		_putchar(*str++);
	}
	_putchar('\n');
}

3-strcmp.c/     0           0     0     644     418       `
#include "main.h"

/**
 * _strcmp - a function that compares two strings.
 * @s1: string 1
 * @s2: string 2
 * Return: null
 */
int _strcmp(char *s1, char *s2)
{
	int i;

	for (i = 0 ; s1[i] != '\0' || s2[i] != '\0'; i++)
		if (s1[i] != s2[i])
		{
			if (s1[i] < s2[i])
				return (s1[i] - s2[i]);
			else if (s1[i] == s2[i])
				return ('0');
			else if (s1[i] > s2[i])
				return (s1[i] - s2[i]);
		}
	return (0);
}
3-strspn.c/     0           0     0     644     66        `
#include "main.h"

unsigned int _strspn(char *s, char *accept)
{}
4-isalpha.c/    0           0     0     644     42        `
#include "main.h"

int _isalpha(int c)
{}
4-strpbrk.c/    0           0     0     644     60        `
#include "main.h"

char *_strpbrk(char *s, char *accept)
{}
5-strstr.c/     0           0     0     644     65        `
#include"main.h"

char *_strstr(char *haystack, char *needle)
{}

6-abs.c/        0           0     0     644     38        `
#include "main.h"

int _abs(int n)
{}
9-strcpy.c/     0           0     0     644     324       `
#include "main.h"

/**
 * *_strcpy - copies the string pointed to by src to dest.
 * @dest: buffer
 * @src: string
 * Return: dest
 */
char *_strcpy(char *dest, char *src)
{
	int l = 0;
	int x = 0;

	while (*(src + l) != '\0')
	{
		l++;
	}
	for ( ; x < l ; x++)
	{
		dest[x] = src[x];
	}
	dest[l] = '\0';
	return (dest);

}
main.c/         0           0     0     644     148       `
#include "main.h"

int main(void)
{
    _puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
    return (0);
}
_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

